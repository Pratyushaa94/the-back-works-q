name: Build & Push All Services to ACR

on:
  push:
    branches:
      - main   # change if needed

env:
  REGISTRY: ${{ secrets.ACR_LOGIN_SERVER }}
  USERNAME: ${{ secrets.ACR_USERNAME }}
  PASSWORD: ${{ secrets.ACR_PASSWORD }}
  NAMESPACE: ${{ secrets.NS }}
  TAG_SHA: ${{ github.sha }}
  TAG_LATEST: latest
  GRADLE_ARGS: "-Pci=true -PskipDocker=true -PskipAzChecks=true"

jobs:
  build-and-push:
    runs-on: ubuntu-latest

    steps:
      # 1. Checkout code
      - name: Checkout repo
        uses: actions/checkout@v4

      # 2. Set up JDK 21
      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '21'

      # 3. Make gradlew executable
      - name: Make gradlew executable
        run: chmod +x ./gradlew

      # 4. Discover services with bootJar
      - name: Discover services
        id: services
        run: |
          PROJECTS_RAW=$(./gradlew projects --console=plain | grep -o "Project ':[^']*'")
          ALL_PROJECTS=$(printf "%s\n" "$PROJECTS_RAW" | sed "s/Project ':\(.*\)'/\1/" | sort -u)
          SERVICES=""
          while IFS= read -r P; do
            [ -z "$P" ] && continue
            if ./gradlew -q ":${P}:tasks" --all | grep -qE '^bootJar[[:space:]]'; then
              SERVICES="${SERVICES} ${P}"
            fi
          done <<< "$ALL_PROJECTS"
          echo "SERVICES=$SERVICES" >> $GITHUB_ENV
          echo "Discovered services: $SERVICES"

      # 5. Build JARs for all services
      - name: Build JARs
        run: |
          for SVC in $SERVICES; do
            echo "Building $SVC..."
            ./gradlew ":$SVC:clean" ":$SVC:bootJar" -x test $GRADLE_ARGS
          done

      # 6. Login to ACR
      - name: Login to ACR
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ env.USERNAME }}
          password: ${{ env.PASSWORD }}

      # 7. Build & push Docker images for all services
      - name: Build & Push Docker Images
        run: |
          for SVC in $SERVICES; do
            IMAGE="${REGISTRY}/${NAMESPACE}/${SVC}"
            echo "Building Docker image for $SVC..."
            docker build --no-cache \
              --build-arg SERVICE=$SVC \
              --build-arg GRADLE_ARGS="$GRADLE_ARGS" \
              -t $IMAGE:$TAG_SHA \
              -t $IMAGE:$TAG_LATEST .

            echo "Pushing Docker images for $SVC..."
            docker push $IMAGE:$TAG_SHA
            docker push $IMAGE:$TAG_LATEST
          done
