/*
 *  Copyright (c) 2025 Revinci AI.
 *
 *  All rights reserved. This software is proprietary to and embodies the
 *  confidential technology of Revinci AI. Possession,
 *  use, duplication, or dissemination of the software and media is
 *  authorized only pursuant to a valid written license from Revinci AI.
 *
 *  Unauthorized use of this software is strictly prohibited.
 *
 *  THIS SOFTWARE IS PROVIDED BY Revinci AI "AS IS" AND ANY
 *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
 *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
 *  DISCLAIMED. IN NO EVENT SHALL REVINCI AI BE LIABLE FOR
 *  ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 *  DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
 *  SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
 *  CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
 *  OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE
 *  USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 *
 * @author
 *
 */


plugins {
    id 'buildlogic.java-conventions'
    id 'org.springframework.boot' version '3.5.4'
    id 'io.spring.dependency-management' version '1.1.7'
}

dependencies {
    annotationProcessor libs.org.projectlombok.lombok
    annotationProcessor libs.org.mapstruct.mapstruct.processor

    api project(":provisioning-iam-commons")
    api project(":web-commons")
    api project(":messaging-commons")

    compileOnly libs.org.mapstruct.mapstruct
    compileOnly libs.org.projectlombok.lombok

    implementation libs.com.azure.spring.cloud.azure.starter.servicebus.jms
    implementation libs.io.micrometer.micrometer.tracing.bridge.otel
    implementation libs.org.keycloak.keycloak.admin.client
    implementation libs.org.springframework.boot.spring.boot.starter.actuator
    implementation libs.org.springframework.boot.spring.boot.starter.data.jpa
    implementation libs.org.springframework.boot.spring.boot.starter.oauth2.resource.server
    implementation libs.org.springframework.boot.spring.boot.starter.web
    implementation libs.org.springframework.cloud.spring.cloud.stream

    runtimeOnly libs.org.postgresql.postgresql

    testImplementation libs.org.springframework.boot.spring.boot.starter.test
}

// Configure Docker for this service
configureDocker(project)

description = 'iam-keycloak-provisioning-service'
